{"version":3,"sources":["events-test.js"],"names":[],"mappings":"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","file":"events-test.js","sourcesContent":["let assert = require('chai').assert;\r\nlet sinon = require('sinon');\r\nlet unison = require('../lib');\r\n\r\ndescribe(\"When objects are updated\", () => {\r\n  let $$;\r\n  beforeEach(() => {\r\n    $$ = unison.local({\r\n      bird: {name: 'eagle'}\r\n    });\r\n  });\r\n\r\n  it(\"events should be triggered once for each update\", () => {\r\n    let callback = sinon.spy();\r\n\r\n    $$('bird').on('updated', callback);\r\n    $$('bird').update({wingspan: 12});\r\n    $$('bird').update({soaring: 'high'});\r\n\r\n    assert.ok(callback.calledTwice);\r\n  });\r\n});\r\n\r\ndescribe(\"When children are added\", () => {\r\n  let $$;\r\n  beforeEach(() => {\r\n    $$ = unison.local({\r\n      food: {}\r\n    });\r\n  });\r\n\r\n  it(\"a correct 'childAdded' event should trigger on its parent\", () => {\r\n    let spy = sinon.spy();\r\n\r\n    $$('food').on('childAdded', spy);\r\n    $$('food').add('cucumber', {name: 'cucumber'});\r\n\r\n    assert.ok(spy.calledOnce);\r\n    assert.ok(spy.calledWith('cucumber'));\r\n  });\r\n\r\n  it(\"a correct 'created' event should trigger on the child\", () => {\r\n    let spy = sinon.spy();\r\n\r\n    $$('food.cucumber').on('created', spy);\r\n    $$('food').add('cucumber', {name: 'cucumber'});\r\n\r\n    assert.ok(spy.calledOnce);\r\n  });\r\n\r\n  it(\"'childAdded' and 'created' events should trigger for nested objects\", () => {\r\n    let created = sinon.spy(), childAdded = sinon.spy(), deepCreated = sinon.spy();\r\n\r\n    $$('food.apple.seed.inside').on('created', deepCreated);\r\n    $$('food.apple.seed.outside').on('created', deepCreated);\r\n    $$('food.apple.seed').on('created', created);\r\n    $$('food.apple').on('childAdded', childAdded);\r\n\r\n    $$('food').add('apple', { seed: { inside: {}, outside: {} } });\r\n\r\n    assert.ok(created.calledOnce);\r\n    assert.ok(childAdded.calledOnce);\r\n    assert.ok(deepCreated.calledTwice);\r\n  });\r\n});\r\n\r\ndescribe(\"When children are removed\", () => {\r\n  let $$;\r\n  beforeEach(() => {\r\n    $$ = unison.local({\r\n      food: {\r\n        apple: {seed: {inside: {}, outside: {}}}\r\n      }\r\n    });\r\n  });\r\n\r\n  it(\"a correct 'childRemoved' event should trigger on its parent\", () => {\r\n    let spy = sinon.spy();\r\n\r\n    $$('food.apple.seed').on('childRemoved', spy);\r\n    $$('food.apple.seed.inside').destroy();\r\n\r\n    assert.ok(spy.calledOnce);\r\n    assert.ok(spy.calledWith('inside'));\r\n  });\r\n\r\n  it(\"a correct 'destroyed' event should trigger on the child\", () => {\r\n    let spy = sinon.spy();\r\n\r\n    $$('food.apple.seed.inside').on('destroyed', spy);\r\n    $$('food.apple.seed.inside').destroy();\r\n\r\n    assert.ok(spy.calledOnce);\r\n  });\r\n\r\n  it(\"'childRemoved' and 'destroyed' events should trigger for nested objects\", () => {\r\n    let destroyed = sinon.spy(), childRemoved = sinon.spy(), deepDestroyed = sinon.spy();\r\n\r\n    $$('food.apple.seed.inside').on('destroyed', deepDestroyed);\r\n    $$('food.apple.seed.outside').on('destroyed', deepDestroyed);\r\n    $$('food.apple.seed').on('destroyed', destroyed);\r\n    $$('food.apple').on('childRemoved', childRemoved);\r\n\r\n    $$('food.apple').destroy();\r\n\r\n    assert.ok(destroyed.calledOnce);\r\n    assert.ok(childRemoved.calledOnce);\r\n    assert.ok(deepDestroyed.calledTwice);\r\n  });\r\n});"],"sourceRoot":"..\\..\\test"}