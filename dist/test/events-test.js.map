{"version":3,"sources":["events-test.js"],"names":[],"mappings":"aAAA,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;AACpC,IAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC7B,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;AAE/B,QAAQ,CAAC,0BAA0B,EAAE,YAAM;AACzC,MAAI,CAAC,YAAA,CAAC;AACN,YAAU,CAAC,YAAM;AACf,KAAC,GAAG,MAAM,CAAC;AACT,UAAI,EAAE,EAAC,IAAI,EAAE,OAAO,EAAC,EACtB,CAAC,CAAC,CACJ,CAAC,CAAC;;;;AAEH,IAAE,CAAC,iDAAiD,EAAE,YAAM;AAC1D,QAAI,QAAQ,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;;AAE3B,KAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;AAClC,KAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,EAAC,QAAQ,EAAE,EAAE,EAAC,CAAC,CAAC;AACjC,KAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,EAAC,OAAO,EAAE,MAAM,EAAC,CAAC,CAAC;;AAEpC,UAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CACjC,CAAC,CAAC,CACJ,CAAC,CAAC;;;;AAEH,QAAQ,CAAC,8BAA8B,EAAE,YAAM;AAC7C,IAAE,CAAC,qBAAqB,EAAE,YAAM;AAC9B,QAAI,CAAC,GAAG,MAAM,CAAC,EAAE,CAAC,EAAE,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,EAAE,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;AAC3D,KAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAC1B,KAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;;AAE1B,KAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,EAAC,EAAE,EAAE,OAAO,EAAC,CAAC,CAAC;AAC5B,KAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,EAAC,OAAO,EAAE,QAAQ,EAAC,CAAC,CAAC;;AAElC,UAAM,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAC5B,UAAM,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAC7B,CAAC,CAAC,CACJ,CAAC,CAAC;;;;AAEH,QAAQ,CAAC,mCAAmC,EAAE,YAAM;AAClD,IAAE,CAAC,oDAAoD,EAAE,YAAM;AAC7D,QAAI,CAAC,GAAG,MAAM,CAAC,EAAC,IAAI,EAAE,EAAE,EAAC,CAAC,EAAE,QAAQ,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;AACnD,KAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;;AAElC,KAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC,CAAC;;AAEjC,UAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AAC3B,QAAI,KAAK,GAAG,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACvC,UAAM,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;AACpC,UAAM,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;AACjC,UAAM,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,MAAM,CAAC,CAAC,CAC3C,CAAC,CAAC;;;AAEH,IAAE,CAAC,uDAAuD,EAAE,YAAM;AAChE,QAAI,CAAC,GAAG,MAAM,CAAC,EAAC,IAAI,EAAE,EAAE,EAAC,CAAC,EAAE,QAAQ,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;AACnD,KAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;;AAElC,KAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC,CAAC;AACjC,KAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,EAAC,MAAM,EAAE,KAAK,EAAC,CAAC,CAAC;;AAElC,UAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;AAChC,QAAI,UAAU,GAAG,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,WAAW,GAAG,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACvF,UAAM,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;AACtC,UAAM,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;AACvC,UAAM,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AACjD,UAAM,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CACpD,CAAC,CAAC,CACJ,CAAC,CAAC;;;;AAEH,QAAQ,CAAC,yBAAyB,EAAE,YAAM;AACxC,MAAI,CAAC,YAAA,CAAC;AACN,YAAU,CAAC,YAAM;AACf,KAAC,GAAG,MAAM,CAAC;AACT,UAAI,EAAE,EAAE,EACT,CAAC,CAAC,CACJ,CAAC,CAAC;;;;AAEH,IAAE,CAAC,uDAAuD,EAAE,YAAM;AAChE,QAAI,GAAG,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;;AAEtB,KAAC,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;AACtC,KAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,UAAU,EAAE,EAAC,IAAI,EAAE,UAAU,EAAC,CAAC,CAAC;;AAE9C,UAAM,CAAC,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAC3B,CAAC,CAAC;;;AAEH,IAAE,CAAC,oDAAoD,EAAE,YAAM;AAC7D,QAAI,OAAO,GAAG,KAAK,CAAC,GAAG,EAAE,EAAE,WAAW,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;;AAErD,KAAC,CAAC,wBAAwB,CAAC,CAAC,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;AACvD,KAAC,CAAC,yBAAyB,CAAC,CAAC,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;AACxD,KAAC,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;;AAE5C,KAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;;AAE9D,UAAM,CAAC,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;AAC9B,UAAM,CAAC,EAAE,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CACpC,CAAC,CAAC,CACJ,CAAC,CAAC;;;;AAEH,QAAQ,CAAC,2BAA2B,EAAE,YAAM;AAC1C,MAAI,CAAC,YAAA,CAAC;AACN,YAAU,CAAC,YAAM;AACf,KAAC,GAAG,MAAM,CAAC;AACT,UAAI,EAAE;AACJ,aAAK,EAAE,EAAC,IAAI,EAAE,EAAC,MAAM,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAC,EAAC,EACzC,EACF,CAAC,CAAC,CACJ,CAAC,CAAC;;;;;AAEH,IAAE,CAAC,yDAAyD,EAAE,YAAM;AAClE,QAAI,GAAG,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;;AAEtB,KAAC,CAAC,wBAAwB,CAAC,CAAC,EAAE,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;AACjD,KAAC,CAAC,wBAAwB,CAAC,CAAC,OAAO,EAAE,CAAC;;AAEtC,UAAM,CAAC,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAC3B,CAAC,CAAC;;;AAEH,IAAE,CAAC,sDAAsD,EAAE,YAAM;AAC/D,QAAI,SAAS,GAAG,KAAK,CAAC,GAAG,EAAE,EAAE,aAAa,GAAG,KAAK,CAAC,GAAG,EAAE,EAAE,iBAAiB,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;;AAE1F,KAAC,CAAC,wBAAwB,CAAC,CAAC,EAAE,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;AAC3D,KAAC,CAAC,yBAAyB,CAAC,CAAC,EAAE,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;AAC5D,KAAC,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;AAChD,KAAC,CAAC,MAAM,CAAC,mBAAmB,EAAE,WAAW,EAAE,iBAAiB,CAAC,CAAC;;AAE9D,KAAC,CAAC,YAAY,CAAC,CAAC,OAAO,EAAE,CAAC;;AAE1B,UAAM,CAAC,EAAE,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;AAChC,UAAM,CAAC,EAAE,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;AACrC,UAAM,CAAC,EAAE,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC,CAC1C,CAAC,CAAC,CACJ,CAAC,CAAC","file":"events-test.js","sourcesContent":["let assert = require('chai').assert;\nlet sinon = require('sinon');\nlet unison = require('../lib');\n\ndescribe(\"When objects are updated\", () => {\n  let u;\n  beforeEach(() => {\n    u = unison({\n      bird: {name: 'eagle'}\n    });\n  });\n\n  it(\"events should be triggered once for each update\", () => {\n    let callback = sinon.spy();\n\n    u('bird').on('updated', callback);\n    u('bird').update({wingspan: 12});\n    u('bird').update({soaring: 'high'});\n\n    assert.ok(callback.calledTwice);\n  });\n});\n\ndescribe(\"Multiple listeners per event\", () => {\n  it(\"should be supported\", () => {\n    let u = unison({}), spy1 = sinon.spy(), spy2 = sinon.spy();\n    u('').on('updated', spy1);\n    u('').on('updated', spy2);\n\n    u('').update({hi: 'There'});\n    u('').update({another: 'update'});\n\n    assert.ok(spy1.calledTwice);\n    assert.ok(spy2.calledTwice);\n  });\n});\n\ndescribe(\"Event objects passed to listeners\", () => {\n  it(\"should have a correct 'name' and 'source' property\", () => {\n    let u = unison({bird: {}}), callback = sinon.spy();\n    u('bird').on('updated', callback);\n\n    u('bird').update({flying: true});\n\n    assert.ok(callback.called);\n    let event = callback.firstCall.args[0];\n    assert.equal(event.name, 'updated');\n    assert.equal(event.timestamp, 1);\n    assert.equal(event.source.path(), 'bird');\n  });\n\n  it(\"should use snapshots at event time for source objects\", () => {\n    let u = unison({bird: {}}), callback = sinon.spy();\n    u('bird').on('updated', callback);\n\n    u('bird').update({flying: true});\n    u('bird').update({flying: false});\n\n    assert.ok(callback.calledTwice);\n    let firstEvent = callback.firstCall.args[0], secondEvent = callback.secondCall.args[0];\n    assert.equal(firstEvent.timestamp, 1);\n    assert.equal(secondEvent.timestamp, 2);\n    assert.equal(firstEvent.source.get.flying, true);\n    assert.equal(secondEvent.source.get.flying, false);\n  });\n});\n\ndescribe(\"When children are added\", () => {\n  let u;\n  beforeEach(() => {\n    u = unison({\n      food: {}\n    });\n  });\n\n  it(\"a correct 'created' event should trigger on the child\", () => {\n    let spy = sinon.spy();\n\n    u('food.cucumber').on('created', spy);\n    u('food').add('cucumber', {name: 'cucumber'});\n\n    assert.ok(spy.calledOnce);\n  });\n\n  it(\"'created' events should trigger for nested objects\", () => {\n    let created = sinon.spy(), deepCreated = sinon.spy();\n\n    u('food.apple.seed.inside').on('created', deepCreated);\n    u('food.apple.seed.outside').on('created', deepCreated);\n    u('food.apple.seed').on('created', created);\n\n    u('food').add('apple', { seed: { inside: {}, outside: {} } });\n\n    assert.ok(created.calledOnce);\n    assert.ok(deepCreated.calledTwice);\n  });\n});\n\ndescribe(\"When children are removed\", () => {\n  let u;\n  beforeEach(() => {\n    u = unison({\n      food: {\n        apple: {seed: {inside: {}, outside: {}}}\n      }\n    });\n  });\n\n  it(\"a correct 'destroyed' event should trigger on the child\", () => {\n    let spy = sinon.spy();\n\n    u('food.apple.seed.inside').on('destroyed', spy);\n    u('food.apple.seed.inside').destroy();\n\n    assert.ok(spy.calledOnce);\n  });\n\n  it(\"'destroyed' events should trigger for nested objects\", () => {\n    let destroyed = sinon.spy(), deepDestroyed = sinon.spy(), wildcardDestroyed = sinon.spy();\n\n    u('food.apple.seed.inside').on('destroyed', deepDestroyed);\n    u('food.apple.seed.outside').on('destroyed', deepDestroyed);\n    u('food.apple.seed').on('destroyed', destroyed);\n    u.listen('food.apple.seed.*', 'destroyed', wildcardDestroyed);\n\n    u('food.apple').destroy();\n\n    assert.ok(destroyed.calledOnce);\n    assert.ok(deepDestroyed.calledTwice);\n    assert.ok(wildcardDestroyed.calledTwice);\n  });\n});"],"sourceRoot":"../../test"}