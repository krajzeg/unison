{"version":3,"sources":["views-test.js"],"names":[],"mappings":"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","file":"views-test.js","sourcesContent":["let _ = require('lodash');\nlet assert = require('chai').assert;\nlet unison = require('../lib');\nlet views = require('../lib').views;\nlet sinon = require('sinon');\n\ndescribe(\"Views plugin\", () => {\n  let u;\n  beforeEach(() => {\n    u = unison({stuff: {}}).plugin(views());\n  });\n\n  describe(\"watch()\", () => {\n    it(\"should bind all methods matching event names as listeners\", () => {\n      let watcher = new TestWatcher();\n      u('stuff').watch(watcher, {\n        updated: watcher.update,\n        destroyed: watcher.destroy\n      });\n\n      u('stuff').update({heavy: true});\n      u('stuff').destroy();\n\n      assert.equal(watcher.updateCount, 1);\n      assert.equal(watcher.destroyCount, 1);\n    });\n\n    it(\"should automatically unbind all listeners when the node is destroyed\", () => {\n      let watcher = new TestWatcher();\n\n      u('stuff').watch(watcher, {\n        updated: watcher.update\n      });\n      u('stuff').destroy();\n\n      u('').add('stuff', {});\n      u('stuff').update({ignored: \"very much\"});\n\n      assert.equal(watcher.updateCount, 0);\n    });\n\n    it(\"should allow registering wildcard listeners\", () => {\n      let watcher = new TestWatcher();\n      u('stuff').watch(watcher, {\n        '*:created': watcher.create,\n        '**:destroyed': watcher.destroy\n      });\n\n      u('stuff').add('things', {});\n      u('stuff.things').add('cruft', {});\n      u('stuff.things.cruft').destroy();\n      u('stuff.things').destroy();\n\n      assert.equal(watcher.createCount, 1); // only 'things'\n      assert.equal(watcher.destroyCount, 2); // both 'cruft' and 'things'\n    });\n  });\n\n  describe(\"view()\", () => {\n    it(\"should let you find views registered earlier with registerObject()\", () => {\n      let v = {};\n      u('stuff').registerView(v);\n      assert.equal(u('stuff').view(), v);\n    });\n\n    it(\"should not find the view after the node was destroyed\", () => {\n      let v = {};\n      u('stuff').registerView(v);\n      u('stuff').destroy();\n      assert.strictEqual(u('stuff').view(), undefined);\n    });\n  });\n});\n\n\nclass TestWatcher {\n  constructor() {\n    this.updateCount = this.destroyCount = this.createCount = 0;\n  }\n  update() { this.updateCount++; }\n  destroy() { this.destroyCount++; }\n  create() { this.createCount++; }\n}"],"sourceRoot":"../../test"}