{"version":3,"sources":["rng-test.js"],"names":[],"mappings":"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","file":"rng-test.js","sourcesContent":["var _ = require('lodash');\nvar assert = require('chai').assert;\nvar unison = require('../lib');\nvar server = require('../lib').server;\nvar client = require('../lib').client;\nvar rng = require('../lib').rng;\nvar ServerCommunicationMock = require('./mocks/server-comm');\nvar ClientCommunicationMock = require('./mocks/client-comm');\n\ndescribe(\"Server-side RNG\", () => {\n  it(\"should send random numbers generated in commands as command extras\", () => {\n    let comm = new ServerCommunicationMock();\n    let u = unison({});\n    u.plugin(server({\n      communication: comm,\n      commands: {\n        rollSomeDice() {\n          let u = this.u;\n          let d6 = u.rng.int(1, 6+1), d12 = u.rng.int(1, 12+1);\n          this.update({d6, d12});\n        }\n      }\n    }));\n    u.plugin(rng({\n      version: 'server', seed: 12345\n    }));\n\n    comm.attach('client1');\n\n    u().rollSomeDice();\n\n    let rollMessage = comm.messagesSentTo('client1')[1];\n    let extras = rollMessage[4];\n    assert.ok(extras);\n    assert.ok(extras.rng);\n    assert.deepEqual(extras.rng, [u().get.d6, u().get.d12]);\n    assert.deepEqual(extras.rng, [5, 7]);\n  });\n});\n\ndescribe(\"Client-side RNG\", () => {\n  it(\"should repeat the values given by the server in extras\", () => {\n    let comm = new ClientCommunicationMock();\n    let u = unison({});\n    u.plugin(client({\n      communication: comm,\n      commands: {\n        rollSomeDice() {\n          let u = this.u;\n          let d6 = u.rng.int(1, 6+1), d12 = u.rng.int(1, 12+1);\n          this.update({d6, d12});\n        }\n      }\n    }));\n    u.plugin(rng({version: 'client'}));\n\n    comm.pushServerString('[\"c\",\"rollSomeDice\",\"\",[],{\"rng\":[5,7]}]');\n\n    assert.equal(u().get.d6, 5);\n    assert.equal(u().get.d12, 7);\n  });\n});\n"],"sourceRoot":"../../test"}