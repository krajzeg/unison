{"version":3,"sources":["immutable-states-test.js"],"names":[],"mappings":"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","file":"immutable-states-test.js","sourcesContent":["let assert = require('chai').assert;\n\nimport { stateWithUpdate, stateWithDelete } from '../lib/immutable-states';\n\ndescribe(\"stateWithUpdate()\", () => {\n  it(\"should return an updated state and keep the original intact\", () => {\n    let original = {\n      paladin: {life: 15},\n      goblin: {life: 12, shield: {broken: false}}\n    };\n\n    let carbonCopy = JSON.parse(JSON.stringify(original));\n\n    let updated1 = stateWithUpdate(original, 'goblin', {life: 0});\n    let updated2 = stateWithUpdate(updated1, '', {orc: {life: 13}});\n    let updated3 = stateWithUpdate(updated2, 'goblin.shield', {broken: true});\n\n    assert.equal(updated3.goblin.life, 0);\n    assert.equal(updated2.goblin.life, 0);\n    assert.equal(updated1.goblin.life, 0);\n\n    assert.equal(updated3.orc.life, 13);\n    assert.equal(updated2.orc.life, 13);\n    assert.equal(updated1.orc, undefined);\n\n    assert.equal(updated3.goblin.shield.broken, true);\n    assert.equal(updated2.goblin.shield.broken, false);\n    assert.equal(updated1.goblin.shield.broken, false);\n\n    assert.deepEqual(original, carbonCopy);\n  });\n});\n\ndescribe(\"stateWithDelete()\", () => {\n  it(\"should return a state with properties removed and keep the original intact\", () => {\n    let original = {\n      paladin: {life: 15},\n      goblin: {life: 12, shield: {heavy: true}}\n    };\n\n    let carbonCopy = JSON.parse(JSON.stringify(original));\n\n    let deleted1 = stateWithDelete(original, 'goblin.shield');\n    let deleted2 = stateWithDelete(deleted1, 'paladin');\n\n    assert.deepEqual(original, carbonCopy);\n    assert.deepEqual(deleted1, {\n      goblin: {life: 12},\n      paladin: {life: 15}\n    });\n    assert.deepEqual(deleted2, {\n      goblin: {life: 12}\n    });\n  });\n});\n"],"sourceRoot":"../../test"}