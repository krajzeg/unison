{"version":3,"sources":["plugin-test.js"],"names":[],"mappings":"aAAA,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;AACpC,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;AAE/B,QAAQ,CAAC,SAAS,EAAE,YAAM;AACxB,IAAE,CAAC,yDAAyD,EAAE,YAAM;AAClE,QAAI,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;;AAEpB,MAAE,CAAC,MAAM,CAAC,YAAM;AACd,aAAO;AACL,eAAO,EAAE;AACP,kBAAQ,EAAE,4BAAM,QAAQ,EAAA,EACzB,EACF,CAAC,CACH,CAAC,CAAC;;;;;AAEH,UAAM,CAAC,KAAK,CAAC,EAAE,CAAC,QAAQ,EAAE,EAAE,QAAQ,CAAC,CAAC,CACvC,CAAC,CAAC;;;AAEH,IAAE,CAAC,wCAAwC,EAAE,YAAM;AACjD,QAAI,EAAE,GAAG,MAAM,CAAC,EAAC,OAAO,EAAE,EAAE,EAAC,CAAC,CAAC;AAC/B,MAAE,CAAC,MAAM,CAAC,YAAM;AACd,aAAO;AACL,mBAAW,EAAE;AACX,uBAAa,EAAA,yBAAG,CAAE,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,CAAE,EACtD,EACF,CAAA,CACF,CAAC,CAAC;;;;;AAEH,UAAM,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,aAAa,EAAE,EAAE,OAAO,CAAC,CAAC,CACpD,CAAC,CAAC;;;AAEH,IAAE,CAAC,sEAAsE,EAAE,YAAM;AAC/E,QAAI,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;;AAEpB,MAAE,CAAC,MAAM,CAAC,UAAC,MAAM,EAAK;AACpB,YAAM,CAAC,SAAS,GAAG,IAAI,CAAC,CACzB,CAAC,CAAC;;;AAEH,UAAM,CAAC,KAAK,CAAC,EAAE,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,CAClC,CAAC,CAAC,CACJ,CAAC,CAAC","file":"plugin-test.js","sourcesContent":["let assert = require('chai').assert;\nlet unison = require('../lib');\n\ndescribe(\"Plugins\", () => {\n  it(\"should be able to add methods to the core Unison object\", () => {\n    let $$ = unison({});\n\n    $$.plugin(() => {\n      return {\n        methods: {\n          greeting: () => \"Hello!\"\n        }\n      };\n    });\n\n    assert.equal($$.greeting(), \"Hello!\");\n  });\n\n  it(\"should be able to add methods to nodes\", () => {\n    let $$ = unison({'apple': {}});\n    $$.plugin(() => {\n      return {\n        nodeMethods: {\n          uppercasePath() { return this.path().toUpperCase(); }\n        }\n      }\n    });\n\n    assert.equal($$('apple').uppercasePath(), 'APPLE');\n  });\n\n  it(\"should be able to affect the Unison object directly if really needed\", () => {\n    let $$ = unison({});\n\n    $$.plugin((unison) => {\n      unison.iWasThere = true;\n    });\n\n    assert.equal($$.iWasThere, true);\n  });\n});"],"sourceRoot":"../../test"}