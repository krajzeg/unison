{"version":3,"sources":["templates-test.js"],"names":[],"mappings":"aAAA,IAAI,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC1B,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;AACpC,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,IAAI,SAAS,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC;;AAE5C,QAAQ,CAAC,kBAAkB,EAAE,YAAM;AACjC,MAAI,CAAC,YAAA,CAAC;;AAEN,YAAU,CAAC,YAAM;AACf,KAAC,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC;AAC9B,eAAS,EAAE;AACT,cAAM,EAAE,EAAC,IAAI,EAAE,QAAQ,EAAC,EACzB,EACF,CAAC,CAAC,CAAA,CACJ,CAAC,CAAC;;;;;AAEH,IAAE,CAAC,oEAAoE,EAAE,YAAM;AAC7E,KAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,EAAE,EAAC,QAAQ,EAAE,kBAAkB,EAAE,IAAI,EAAE,EAAE,EAAC,CAAC,CAAC;AAC5D,UAAM,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;AAC7C,UAAM,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AACvC,UAAM,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,kBAAkB,CAAC,CAAC,CAC5D,CAAC,CAAC;;;AAEH,IAAE,CAAC,wDAAwD,EAAE,YAAM;AACjE,KAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,EAAE,EAAC,SAAS,EAAE,CAAC,EAAC,CAAC,CAAC;AAClC,UAAM,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;AAC3B,UAAM,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAC5C,CAAC,CAAC;;;AAEH,IAAE,CAAC,wCAAwC,EAAE,YAAM;AACjD,QAAI,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,EAAE,EAAC,QAAQ,EAAE,kBAAkB,EAAE,IAAI,EAAE,EAAE,EAAC,CAAC,CAAC;AACzE,UAAM,CAAC,MAAM,CAAC,EAAC,IAAI,EAAE,CAAC,EAAC,CAAC,CAAC;AACzB,UAAM,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;AACjC,UAAM,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CACzC,CAAC,CAAC;;;AAEH,IAAE,CAAC,mEAAmE,EAAE,YAAM;AAC5E,KAAC,EAAE,CAAC,KAAK,CAAC,kBAAkB,EAAE,EAAC,IAAI,EAAE,EAAE,EAAC,CAAC,CAAC;AAC1C,UAAM,CAAC,KAAK,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;AAC/C,UAAM,CAAC,KAAK,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAC1C,CAAC,CAAC;;;AAEH,IAAE,CAAC,sDAAsD,EAAE,YAAM;AAC/D,UAAM,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAC7D,CAAC,CAAC,CACJ,CAAC,CAAC","file":"templates-test.js","sourcesContent":["let _ = require('lodash');\nlet assert = require('chai').assert;\nlet unison = require('../lib');\nlet templates = require('../lib').templates;\n\ndescribe(\"Templates plugin\", () => {\n  let u;\n\n  beforeEach(() => {\n    u = unison({}).plugin(templates({\n      creatures: {\n        goblin: {name: \"Goblin\"}\n      }\n    }))\n  });\n\n  it(\"should automatically apply templates specified in add()-ed objects\", () => {\n    u().add('goblin', {template: 'creatures.goblin', life: 12});\n    assert.equal(u('goblin').get.name, 'Goblin');\n    assert.equal(u('goblin').get.life, 12);\n    assert.equal(u('goblin').get.template, 'creatures.goblin');\n  });\n\n  it(\"should do nothing to objects that don't want templates\", () => {\n    u().add('banana', {juiciness: 7});\n    assert.ok(u('banana').get);\n    assert.equal(u('banana').get.juiciness, 7);\n  });\n\n  it(\"should keep the template after updates\", () => {\n    let goblin = u().add('goblin', {template: 'creatures.goblin', life: 12});\n    goblin.update({life: 6});\n    assert.equal(goblin.get.life, 6);\n    assert.equal(goblin.get.name, 'Goblin');\n  });\n\n  it(\"should expose a spawn() method to easily create templated objects\", () => {\n    u().spawn('creatures.goblin', {life: 12});\n    assert.equal(u('goblin#1').get.name, 'Goblin');\n    assert.equal(u('goblin#1').get.life, 12);\n  });\n\n  it(\"should give access to the templates via u.template()\", () => {\n    assert.equal(u.template('creatures.goblin').name, 'Goblin');\n  });\n});"],"sourceRoot":"../../test"}