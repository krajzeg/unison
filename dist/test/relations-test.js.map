{"version":3,"sources":["relations-test.js"],"names":[],"mappings":"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","file":"relations-test.js","sourcesContent":["let _ = require('lodash');\nlet assert = require('chai').assert;\nlet unison = require('../lib');\nlet client = require('../lib').client;\nlet relations = require('../lib').relations;\nlet sinon = require('sinon');\n\ndescribe(\"Relations plugin\", () => {\n\n  it(\"should allow introducing and checking relations between objects from both sides\", () => {\n    let u = prepareUnisonInstance([\n      {AtoB: 'fatherOf', BtoA: 'childOf', A: 'father', Bs: 'children'}\n    ]);\n    let tom = u('tom'), jerry = u('jerry'), alice = u('alice'), bob = u('bob');\n\n    tom.now('fatherOf', jerry);\n    alice.now('childOf', bob);\n\n    assert.ok(tom.fatherOf(jerry));\n    assert.ok(jerry.childOf(tom));\n    assert.ok(bob.fatherOf(alice));\n    assert.ok(alice.childOf(bob));\n  });\n\n  it(\"should allow severing relations between objects\", () => {\n    let u = prepareUnisonInstance([\n      {AtoB: 'fatherOf', BtoA: 'childOf', A: 'father', Bs: 'children'}\n    ]);\n    let tom = u('tom'), jerry = u('jerry'), alice = u('alice'), bob = u('bob');\n\n    tom.now('fatherOf', jerry);\n    tom.noLonger('fatherOf', jerry);\n\n    assert.ok(!tom.fatherOf(jerry));\n    assert.ok(!jerry.childOf(tom));\n  });\n\n  it(\"should support getting related objects through properly named methods\", () => {\n    let u = prepareUnisonInstance([\n      {AtoB: 'fatherOf', BtoA: 'childOf', A: 'father', Bs: 'children'}\n    ]);\n    let tom = u('tom'), jerry = u('jerry'), alice = u('alice'), bob = u('bob');\n\n    tom.now('fatherOf', jerry);\n    tom.now('fatherOf', alice);\n\n    assert.equal(jerry.father().path(), 'tom');\n    assert.equal(alice.father().path(), 'tom');\n    assert.deepEqual(_.invoke(tom.children(), 'path'), ['jerry', 'alice']);\n\n    assert.equal(bob.father(), undefined);\n    assert.deepEqual(bob.children(), []);\n  });\n\n  it(\"should throw when introducing a relation that's already there\", () => {\n    let u = prepareUnisonInstance([\n      {AtoB: 'fatherOf', BtoA: 'childOf', A: 'father', Bs: 'children'}\n    ]);\n    let tom = u('tom'), jerry = u('jerry');\n\n    tom.now('fatherOf', jerry);\n    assert.throws(() => {\n      tom.now('fatherOf', jerry);\n    });\n  });\n\n  it(\"should throw when severing a relation that's not there\", () => {\n    let u = prepareUnisonInstance([\n      {AtoB: 'fatherOf', BtoA: 'childOf', A: 'father', Bs: 'children'}\n    ]);\n    let tom = u('tom'), bob = u('bob');\n\n    assert.throws(() => tom.noLonger('fatherOf', bob));\n  });\n\n  it(\"should trigger 'updated' events on both sides when relations change\", () => {\n    let u = prepareUnisonInstance([\n      {AtoB: 'fatherOf', BtoA: 'childOf', A: 'father', Bs: 'children'}\n    ]);\n    let tom = u('tom'), jerry = u('jerry');\n    let tomSpy = sinon.spy(), jerrySpy = sinon.spy();\n\n    tom.on('updated', tomSpy); jerry.on('updated', jerrySpy);\n\n    tom.now('fatherOf', jerry);\n    jerry.noLonger('childOf', tom);\n\n    assert.ok(tomSpy.calledTwice);\n    assert.ok(jerrySpy.calledTwice);\n  });\n\n  it(\"should trigger 'now:X' and 'noLonger:x' events when relations change\", () => {\n    let u = prepareUnisonInstance([\n      {AtoB: 'fatherOf', BtoA: 'childOf', A: 'father', Bs: 'children'}\n    ]);\n    let tom = u('tom'), jerry = u('jerry');\n    let nowSpy = sinon.spy(), noLongerSpy = sinon.spy();\n\n    tom.on('now:fatherOf', nowSpy);\n    jerry.on('noLonger:childOf', noLongerSpy);\n\n    tom.now('fatherOf', jerry);\n    tom.noLonger('fatherOf', jerry);\n\n    assert.ok(nowSpy.calledOnce);\n    assert.ok(noLongerSpy.calledOnce);\n    assert.equal(nowSpy.firstCall.args[0].target.path(), 'jerry');\n    assert.equal(noLongerSpy.firstCall.args[0].target.path(), 'tom');\n  });\n\n  it(\"should send correct commands when relations are introduced and severed\", () => {\n    let server = require('../lib').server;\n    let comm = new (require('./mocks/server-comm'))();\n    let u = unison({\n      tom: {}, jerry:{}\n    });\n    u.plugin(server({communication: comm}));\n    u.plugin(relations());\n    u.define({\n      relations: [\n        {AtoB: 'likes', BtoA: 'likedBy', Bs: 'liked', As: 'likers'}\n      ]\n    });\n\n    comm.attach('test');\n\n    u('tom').now('likes', u('jerry'));\n    u('jerry').noLonger('likedBy', u('tom'));\n\n    assert.deepEqual(comm.messagesSentTo('test')[1],\n      ['c', 'now', 'tom', ['likes', {_u: 'jerry'}]]\n    );\n    assert.deepEqual(comm.messagesSentTo('test')[2],\n      ['c', 'noLonger', 'jerry', ['likedBy', {_u: 'tom'}]]\n    );\n  });\n\n  it(\"should automatically sever an old n:1 relation when the 1-side changes\", () => {\n    let u = unison({\n      doctor: {}, london: {}, tardis: {}, bobby: {}\n    });\n    u.plugin(relations());\n    u.define({\n      relations: [\n        {AtoB: 'contains', BtoA: 'isIn', A: 'location', Bs: 'contents'}\n      ]\n    });\n\n    let [doctor, london, tardis, bobby] = _.map(['doctor', 'london', 'tardis', 'bobby'], (path) => u(path));\n    london.now('contains', bobby);\n    london.now('contains', doctor);\n    doctor.now('isIn', tardis); // this should move him away from London too\n\n    assert.ok(doctor.isIn(tardis));\n    assert.ok(!doctor.isIn(london));\n    assert.deepEqual(_.invoke(london.contents(), 'path'), ['bobby']);\n    assert.equal(doctor.location().path(), 'tardis');\n  });\n\n  it(\"should automatically sever an old 1:1 relation when a new one is added\", () => {\n    let u = unison({\n      door: {}, redKnob: {}, blueKnob: {}\n    });\n    u.plugin(relations());\n    u.define({\n      relations: [\n        {AtoB: 'opens', BtoA: 'openedBy', A: 'door', B: 'knob'}\n      ]\n    });\n\n    let [door, redKnob, blueKnob] = _.map(['door', 'redKnob', 'blueKnob'], (path) => u(path));\n    door.now('openedBy', redKnob);\n    door.now('openedBy', blueKnob);\n\n    assert.ok(door.openedBy(blueKnob));\n    assert.ok(!door.openedBy(redKnob));\n    assert.ok(blueKnob.opens(door));\n    assert.ok(!redKnob.opens(door));\n    assert.equal(redKnob.door(), undefined);\n  });\n\n  it(\"should reflect the state at snapshot time when used with a snapshot node\", () => {\n    let u = prepareUnisonInstance([\n      {AtoB: 'fatherOf', BtoA: 'childOf', A: 'father', Bs: 'children'}\n    ]);\n    let tom = u('tom'), jerry = u('jerry'), alice = u('alice'), bob = u('bob');\n\n    // each \"now\" and \"noLonger\" operation costs two updates (to both objects), so timestamps increment by 2\n    tom.now('fatherOf', jerry); // timestamp 2: tom.children = [jerry]\n    tom.now('fatherOf', alice); // timestamp 4: tom.children = [jerry, alice]\n\n    let oldTom = u('tom').at(2), oldJerry = u('jerry').at(2), oldAlice = u('alice').at(2);\n\n    // check state at timestamp 1\n    assert.deepEqual(_.invoke(oldTom.children(), 'path'), ['jerry']);\n    assert.equal(oldJerry.father().path(), 'tom');\n    assert.equal(oldAlice.father(), undefined);\n\n    assert.ok(oldTom.fatherOf(oldJerry));\n    assert.ok(!oldTom.fatherOf(oldAlice));\n    assert.ok(oldJerry.childOf(oldTom));\n    assert.ok(!oldAlice.childOf(oldTom));\n  });\n\n  it(\"should allow different types to use the same relation differently\", () => {\n    let u = unison({\n      london: {_t: 'City'}, manchester: {_t: 'City'}, england: {_t: 'Country'},\n      bucket: {_t: 'Vessel'}, water: {_t: 'Liquid'}\n    });\n    u.plugin(relations());\n    u.define('City');\n    u.define('Country', {\n      relations: [{withType: 'City', AtoB: 'contains', BtoA: 'isIn', A: 'country', Bs: 'cities'}]\n    });\n    u.define('Liquid');\n    u.define('Vessel', {\n      relations: [{withType: 'Liquid', AtoB: 'contains', BtoA: 'isIn', A: 'vessel', B: 'liquid'}]\n    });\n\n    let [london, manchester, england, bucket, water] = _.map(['london', 'manchester', 'england', 'bucket', 'water'], (n) => u(n));\n\n    london.now('isIn', england);\n    england.now('contains', manchester);\n    bucket.now('contains', water);\n\n    assert.ok(england.contains(london));\n    assert.ok(england.contains(manchester));\n    assert.ok(bucket.contains(water));\n    assert.ok(london.isIn(england));\n    assert.ok(manchester.isIn(england));\n    assert.ok(water.isIn(bucket));\n\n    assert.sameMembers(_.map(england.cities(), (c) => c.path()), ['london', 'manchester']);\n    assert.ok(london.country().is(england));\n    assert.ok(manchester.country().is(england));\n    assert.ok(bucket.liquid().is(water));\n    assert.ok(water.vessel().is(bucket));\n  });\n\n  it(\"should reject mis-typed relations\", () => {\n    let u = unison({\n      london: {_t: 'City'}, manchester: {_t: 'City'}, england: {_t: 'Country'},\n      bucket: {_t: 'Vessel'}, water: {_t: 'Liquid'}\n    });\n    u.plugin(relations());\n    u.define('City');\n    u.define('Country', {\n      relations: [{withType: 'City', AtoB: 'contains', BtoA: 'isIn', A: 'country', Bs: 'cities'}]\n    });\n    u.define('Liquid');\n    u.define('Vessel', {\n      relations: [{withType: 'Liquid', AtoB: 'contains', BtoA: 'isIn', A: 'vessel', B: 'liquid'}]\n    });\n\n    let [london, manchester, england, bucket, water] = _.map(['london', 'manchester', 'england', 'bucket', 'water'], (n) => u(n));\n\n    assert.throws(() => { bucket.now('contains', london); });\n    assert.throws(() => { england.now('contains', water); });\n    assert.throws(() => { bucket.now('isIn', manchester); });\n  });\n\n  it(\"should allow inheritance of relations from Node\", () => {\n    let u = unison({});\n    u.plugin(relations());\n    u.define('Vegetable');\n    u.define('Node', {\n      relations: [{AtoB: 'contains', BtoA: 'isIn', A: 'location', B: 'content'}]\n    });\n\n    let bag = u().add('bag', {}), box = u().add('box', {});\n    let cucumber = u().add('cucumber', u.Vegetable({}));\n    let tomato = u().add('tomato', u.Vegetable({}));\n    let seed1 = u().add({}), seed2 = u().add({});\n\n    bag.now('contains', cucumber);\n    tomato.now('isIn', box);\n\n    cucumber.now('contains', seed1);\n    seed2.now('isIn', tomato);\n\n    assert.ok(bag.content().is(cucumber));\n    assert.ok(box.content().is(tomato));\n    assert.ok(cucumber.content().is(seed1));\n    assert.ok(tomato.content().is(seed2));\n  });\n});\n\nfunction prepareUnisonInstance(rels) {\n  let u = unison({\n    tom: {}, jerry: {}, bob: {}, alice: {}\n  });\n  u.plugin(relations());\n  u.define({relations: rels});\n\n  return u;\n}\n"],"sourceRoot":"../../test"}