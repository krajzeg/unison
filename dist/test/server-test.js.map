{"version":3,"sources":["server-test.js"],"names":[],"mappings":"aAAA,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;AACpC,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,IAAI,MAAM,GAAG,OAAO,CAAC,uBAAuB,CAAC,CAAC;AAC9C,IAAI,iBAAiB,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAC;;AAEvD,QAAQ,CAAC,uBAAuB,EAAE,YAAM;AACtC,IAAE,CAAC,mFAAmF,EAAE,YAAM;AAC5F,QAAI,IAAI,GAAG,IAAI,iBAAiB,EAAE,CAAC;;AAEnC,QAAI,EAAE,GAAG,MAAM;AACZ,SAAK,CAAC,EAAC,IAAI,EAAE,EAAE,EAAC,CAAC;AACjB,UAAM,CAAC,MAAM,CAAC;AACb,mBAAa,EAAE,IAAI;AACnB,cAAQ,EAAE;AACR,YAAI,EAAA,cAAC,OAAO,EAAE;AACZ,cAAI,CAAC,MAAM,CAAC,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC,CACjC,EACF;;;AACD,aAAO,EAAE,EAAE,EACZ,CAAC,CAAC,CAAC;;;AAEN,QAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;AACvB,QAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;;AAEvB,MAAE,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;;AAE7B,UAAM,CAAC,SAAS,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,EAAE,EAAC,OAAO,EAAE,WAAW,EAAC,CAAC,CAAC;AAC7D,UAAM,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE;AAC/C,KAAC,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,WAAW,CAAC,CAAC,CACrC,CAAC,CAAC;;AACH,UAAM,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE;AAC/C,KAAC,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,WAAW,CAAC,CAAC,CACrC,CAAC,CAAC,CACJ,CAAC,CAAC,CACJ,CAAC,CAAC","file":"server-test.js","sourcesContent":["var assert = require('chai').assert;\r\nvar unison = require('../lib');\r\nvar server = require('../lib/plugins/server');\r\nvar CommunicationMock = require('./mocks/server-comm');\r\n\r\ndescribe(\"Unison network server\", () => {\r\n  it(\"should translate command methods into local changes and network messages properly\", () => {\r\n    let comm = new CommunicationMock();\r\n\r\n    let $$ = unison\r\n      .local({bird: {}})\r\n      .plugin(server({\r\n        communication: comm,\r\n        commands: {\r\n          frob(howHard) {\r\n            this.update({frobbed: howHard});\r\n          }\r\n        },\r\n        intents: {}\r\n      }));\r\n\r\n    comm.attach('client1');\r\n    comm.attach('client2');\r\n\r\n    $$('bird').frob('very hard');\r\n\r\n    assert.deepEqual($$('bird').state(), {frobbed: 'very hard'});\r\n    assert.deepEqual(comm.messagesSentTo('client1'), [\r\n      ['c', 'frob', 'bird', ['very hard']]\r\n    ]);\r\n    assert.deepEqual(comm.messagesSentTo('client2'), [\r\n      ['c', 'frob', 'bird', ['very hard']]\r\n    ]);\r\n  });\r\n});\r\n"],"sourceRoot":"..\\..\\test"}