{"version":3,"sources":["base.js"],"names":[],"mappings":"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","file":"base.js","sourcesContent":["let _ = require('lodash');\n\nimport {childPath, parentPath, idFromPath, isObject, wrapFunction} from './util';\nimport {stateWithUpdate, stateWithDelete} from './immutable-states';\nimport UnisonEvents from './events';\n\n// Main Unison object.\n// Uses classical instead of ES6 classes to allow Unison.apply(...) down the road.\nexport default function Unison(initialState = {}, options = {}) {\n  this._events = new UnisonEvents(this);\n\n  this._states = {0: _.extend(initialState, {_t: 'Root'})};\n  this._current = 0;\n  this._nextId = 1;\n\n  this.config = _.defaults(options, {\n    backlogSize: 1000\n  });\n\n  // this is a space for additional private state kept by the server/client\n  // intended for objects with methods and other non-JSON-serializable stuff\n  this.privates = {};\n\n  // nodes in the Unison state can have different class-like types\n  // Node is the master-type that they all inherit from, and can be used\n  // to add capabilities to all nodes\n  this.types = {};\n  this.types.Node = { definitions: {}, proto: Object.create(UnisonNode.prototype) };\n  this.types.Root = { definitions: {}, proto: Object.create(this.types.Node.proto) };\n\n  // machinery behind the 'define' call\n  this.onDefineCallbacks = [];\n}\n\nUnison.prototype = {\n  grab(path = '', time = undefined) {\n    if ((time !== undefined) && (!this._states[time]))\n      throw(`Can't create a snapshot at time ${time} - no state recorded for that timestamp.`);\n\n    // determine what prototype to use for this node\n    // node with a '_t' property will get the type named by it\n    // nodes with no '_t' property and non-existent nodes will just get Node\n    let nodeState = path ? _.get(this.stateAt(time), path) : this.stateAt(time);\n    let nodeType = (nodeState && nodeState._t) || 'Node';\n    if (!this.types[nodeType])\n      throw new Error(`Node '${path}' proclaims it is of type '${nodeType}', but no such type is known.`);\n\n    let node = Object.create(this.types[nodeType].proto);\n    UnisonNode.apply(node, [this, path, time]);\n    return node;\n  },\n\n  currentState() {\n    return this._states[this._current];\n  },\n\n  currentTime() {\n    return this._current;\n  },\n\n  stateAt(time) {\n    return (time !== undefined) ? this._states[time] : this._states[this._current];\n  },\n\n  applyChange(path, changedProperties, deletedProperties = undefined) {\n    let changedState = stateWithUpdate(this.currentState(), path, changedProperties, deletedProperties);\n    this._states[++this._current] = changedState;\n\n    let backlogSize = this.config.backlogSize;\n    if (backlogSize && (this._current >= backlogSize))\n      delete this._states[this._current - backlogSize];\n  },\n\n  listen(...args) { return this._events.listen(...args); },\n  unlisten(...args) { return this._events.unlisten(...args); },\n\n  collectEvents(path, directEvent, acc = []) {\n    let object = _.get(this.currentState(), path);\n\n    acc.push([path, directEvent]);\n    _.each(object, (child, id) => {\n      if (typeof child === 'object' && !(child instanceof Array)) {\n        // that's a child, trigger childAdded and recurse into it\n        this.collectEvents(childPath(path, id), directEvent, acc);\n      }\n    });\n\n    return acc;\n  },\n\n  nextId() {\n    return (this._nextId++).toString();\n  },\n\n  registerGlobalProperties(props) {\n    _.extend(this, props);\n  },\n\n  registerNodeProperties(props) {\n    _.extend(this.types.Node.proto, props);\n  },\n\n  applyNodeWrappers(wrappers) {\n    _.each(wrappers, (outerFn, methodName) => {\n      this.types.Node.proto[methodName] = wrapFunction(outerFn, this.types.Node.proto[methodName]);\n    });\n  },\n\n  applyGlobalWrappers(wrappers) {\n    _.each(wrappers, (outerFn, methodName) => {\n      this[methodName] = wrapFunction(outerFn, this[methodName]);\n    });\n  },\n\n\n  type(name) {\n    if (!this.types[name]) {\n      this.types[name] = {\n        definitions: {},\n        proto: Object.create(this.types.Node.proto)\n      };\n    }\n    return this.types[name];\n  },\n\n  // Defines something about a chosen type (or all nodes). What exactly can be defined depends on the added plugins.\n  // Server and client plugins allow you to define 'commmands' and 'intents'. The relations plugin adds 'relations'.\n  define(typeOrDefinitions, definitions) {\n    // determine arguments (either define({...}) or define('Type', {...}))\n    let typeName;\n    if (!definitions) {\n      typeName = 'Node'; definitions = typeOrDefinitions;\n    } else {\n      typeName = typeOrDefinitions;\n    }\n\n    // grab the type object\n    let typeObj = this.type(typeName);\n\n    // go through all plugins that process definitions\n    _.each(this.onDefineCallbacks, (callback) => {\n      callback(typeName, definitions, typeObj.proto);\n    });\n\n    // store the definitions in case a plugin appears later that would want them\n    // we make sure that array/object-like properties get merged instead of overwritten\n    _.each(definitions, (newlyDefined, name) => {\n      let existing = typeObj.definitions[name];\n      if (existing instanceof Array) {\n        typeObj.definitions[name] = existing.concat(newlyDefined);\n      } else if (isObject(existing)) {\n        typeObj.definitions[name] = _.extend({}, existing, newlyDefined);\n      } else {\n        typeObj.definitions[name] = newlyDefined;\n      }\n    });\n  },\n\n  plugin(pluginFn) {\n    var options = pluginFn(this) || {};\n    this.registerGlobalProperties(options.methods || {});\n    this.registerNodeProperties(options.nodeMethods || {});\n    this.applyGlobalWrappers(options.methodWrappers || {});\n    this.applyNodeWrappers(options.nodeMethodWrappers || {});\n\n    if (options.name) {\n      this.plugins = this.plugins || {};\n      this.plugins[options.name] = pluginFn;\n    }\n\n    if (options.onDefine) {\n      let {onDefine} = options;\n      // apply existing definitions\n      _.each(this.types, (type, typeName) => onDefine(typeName, type.definitions, type.proto));\n      // make sure future definitions are picked up\n      this.onDefineCallbacks.push(onDefine);\n    }\n\n    return this;\n  }\n};\n\nclass UnisonNode {\n  constructor(unison, path, time = undefined) {\n    this.u = unison;\n    this._path = path;\n    this._time = time; // undefined means 'always use current state'\n  }\n\n  // === Properties of this node\n\n  path() {\n    return this._path;\n  }\n\n  id() {\n    return idFromPath(this.path());\n  }\n\n  // === Retrieving and interacting with other, related nodes\n\n  root() {\n    return this.u.grab('', this._time);\n  }\n\n  parent() {\n    return this.u.grab(parentPath(this.path()), this._time);\n  }\n\n  child(id) {\n    return this.u.grab(childPath(this.path(), id), this._time);\n  }\n\n  is(otherNode) {\n    return this._path == otherNode._path;\n  }\n\n  children() {\n    let children = [];\n    _.each(this.get, (obj, id) => {\n      if (isObject(obj))\n        children.push(this.child(id));\n    });\n    return children;\n  }\n\n  find(subpath) {\n    if (this._path)\n      return (this.u)(`${this._path}.${subpath}`, this._time);\n    else\n      return (this.u)(subpath, this._time);\n  }\n\n  // === Timestamp-related operations\n\n  at(time) {\n    return this.u.grab(this._path, time);\n  }\n\n  timestamp() {\n    return this._time;\n  }\n\n  // === Retrieving state\n\n  state() {\n    if (this._path === '') {\n      return this.u.stateAt(this._time);\n    } else {\n      return _.get(this.u.stateAt(this._time), this._path);\n    }\n  }\n\n  get get() {\n    return this.state();\n  }\n\n  update(props) {\n    this.ensureCurrent();\n    this.u.applyChange(this._path, props);\n    this.trigger('updated');\n  }\n\n  add(...args) {\n    let unison = this.u;\n\n    // extract arguments (either (child) or (id, child))\n    let id, child;\n    if (args.length == 2) {\n      [id, child] = args;\n    } else {\n      child = args[0];\n      id = unison.nextId();\n    }\n\n    // sanity checks\n    this.ensureCurrent();\n    let state = this.state();\n    expectObject(state, `Can't add child at ${this._path}`);\n    if (state[id] !== undefined) {\n      throw new Error(`Can't add child '${id}' at ${this._path} - it already exists.`);\n    }\n    validateId(id);\n\n    // add it\n    this.u.applyChange(this._path, {[id]: child});\n\n    // trigger events\n    let pathToChild = childPath(this.path(), id);\n    unison._events.triggerAll(unison.collectEvents(pathToChild, 'created'));\n\n    // return the node for the new child\n    return this.child(id);\n  }\n\n  remove(id) {\n    // sanity checks\n    this.ensureCurrent();\n    let state = this.state();\n    expectObject(state, `Can't remove child at ${this._path}`);\n    if (state[id] === undefined) {\n      throw new Error(`Can't remove child '${id}' at ${this._path} - no such object exists.`);\n    }\n\n    // store events for later, as the object themselves will disappear\n    let pathToChild = childPath(this._path, id);\n    var events = this.u.collectEvents(pathToChild, 'destroyed');\n\n    // remove the object\n    this.u.applyChange(this._path, {}, [id]);\n\n    // trigger the events\n    this.u._events.triggerAll(events);\n\n    // done\n    return true;\n  }\n\n  destroy() {\n    // straightforward translation\n    expectObject(this.state(), \"Can't destroy ${this._path}\");\n    return this.parent().remove(this.id());\n  }\n\n  on(event, callback) {\n    this.u._events.listen(this._path, event, callback);\n  }\n\n  off(event, callback) {\n    this.u._events.unlisten(this._path, event, callback);\n  }\n\n  onAny(event, callback) {\n    this.u._events.listen(childPath(this._path, '**'), event, callback);\n  }\n\n  offAny(event, callback) {\n    this.u._events.unlisten(childPath(this._path, '**'), event, callback);\n  }\n\n  onChild(event, callback) {\n    this.u._events.listen(childPath(this._path, '*'), event, callback);\n  }\n\n  offChild(event, callback) {\n    this.u._events.unlisten(childPath(this._path, '*'), event, callback);\n  }\n\n  trigger(event, payload) {\n    this.u._events.trigger(this._path, event, payload);\n  }\n\n  ensureCurrent() {\n    if (this._time !== undefined)\n      throw new Error(\"Destructive operations are only allowed on nodes representing the current state, not a snapshot.\");\n  }\n}\n\nfunction expectObject(state, msg) {\n  if (state === undefined) {\n    throw new Error(`${msg} - node does not exist.`)\n  }\n  if (typeof state != 'object') {\n    throw new Error(`${msg} - '${state}' is not an object.`);\n  }\n}\n\nfunction validateId(id) {\n  if (id == '') throw new Error('IDs have to be non-empty.');\n  if (id.indexOf(\".\") >= 0) throw new Error('IDs cannot contain dots.');\n}\n"],"sourceRoot":"../../lib"}