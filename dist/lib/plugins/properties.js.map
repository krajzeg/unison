{"version":3,"sources":["plugins/properties.js"],"names":[],"mappings":";;;AAGwB,UAAU,qBAFL,SAAS,EADtC,IAAI,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,AAGX,SAAS,UAAU,GAAG;AACnC,SAAO,wBAAa,gBAAgB,EAAE,EAAE,EAAE,aAAa,CAAC,CAAC,CAC1D;;;AAED,SAAS,gBAAgB,GAAG;;CAE3B;AACD,gBAAgB,CAAC,SAAS,GAAG;AAC3B,aAAW,EAAA,qBAAC,CAAC,EAAE;AACb,QAAI,CAAC,CAAC,GAAG,CAAC,CAAC;;;;AAIX,WAAO;AACL,cAAQ,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,EAC7C,CAAC,CACH;;;;AAED,oBAAkB,EAAA,4BAAC,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE;AAC5C,QAAI,KAAK,GAAG,IAAI,CAAC,UAAU,IAAI,EAAE,CAAC;;;AAGlC,KAAC,CAAC,IAAI,CAAC,KAAK,EAAE,UAAC,IAAI,EAAE,IAAI,EAAK;AAC5B,eAAS,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CACxB,CAAC,CAAC,CACJ,EACF,CAAC","file":"plugins/properties.js","sourcesContent":["let _ = require('lodash');\nimport { functionized } from '../util';\n\nexport default function properties() {\n  return functionized(PropertiesPlugin, [], 'applyPlugin');\n}\n\nfunction PropertiesPlugin() {\n  // nothing to initialize\n}\nPropertiesPlugin.prototype = {\n  applyPlugin(u) {\n    this.u = u;\n\n    // we're basically allowing to define properties and that's it,\n    // a very simple plugin\n    return {\n      onDefine: this.processDefinitions.bind(this)\n    };\n  },\n\n  processDefinitions(typeName, defs, prototype) {\n    let props = defs.properties || {};\n\n    // properties are just methods with no magic about them\n    _.each(props, (impl, name) => {\n      prototype[name] = impl;\n    });\n  }\n};\n"],"sourceRoot":"../../../lib"}