{"version":3,"sources":["plugins/relations.js"],"names":[],"mappings":"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","file":"plugins/relations.js","sourcesContent":["let _ = require('lodash');\n\nexport default function relations(rels) {\n  let plugin = new Relations(rels)\n  return (u) => (plugin.applyPlugin(u));\n}\n\nclass Relations {\n  constructor(relations) {\n    this.relations = {}\n\n    _.each(relations, (rel) => {\n      this.relations[rel.AtoB] = rel;\n      this.relations[rel.BtoA] = rel;\n    });\n  }\n\n  find(name) {\n    return this.relations[name];\n  }\n\n  applyPlugin(u) {\n    this.u = u;\n\n    // add the core 'relate' and 'cease' commands (or methods if not in a client/server environment)\n    let nodeMethods = {}, addCommand;\n\n    if (u.addCommand) {\n      addCommand = u.addCommand.bind(u);\n    } else {\n      addCommand = function(name, fn) { nodeMethods[name] = fn; };\n    }\n    addCommand('relate', makeRelateFn(this));\n    //addCommand('cease', makeCeaseFn(this));\n\n    // add all .contains(x)-type predicates and .now/noLonger.contains-type methods\n    let relationNames = _.keys(this.relations);\n    let checkMethods = _.object(_.map(relationNames, (name) => [name, makeCheckFn(name)]));\n    let nowMethods = _.object(_.map(relationNames, (name) => [name, makeNowFn(name)]));\n\n    // done!\n    return {\n      nodeMethods: _.extend(nodeMethods, checkMethods, {now: nowMethods})\n    };\n  }\n}\n\nfunction makeRelateFn(relations) {\n  return function(name, otherSide) {\n    let relation = relations.find(name);\n    if (!relation)\n      throw new Error(`Unknown relation name: '$relation'`);\n\n    let inverseName = (relation.AtoB == name) ? relation.BtoA : relation.AtoB;\n\n    addRelation(this, name, otherSide);\n    addRelation(otherSide, inverseName, this);\n  };\n}\n\nfunction makeNowFn(relationName) {\n  return function(other) {\n    return this.relate(relationName, other);\n  }\n}\n\nfunction makeCheckFn(relationName) {\n  return function(otherSide) {\n    let path = otherSide.path();\n    let rels = this.get[relationName] || [];\n    return rels.indexOf(path) >= 0;\n  }\n}\n\nfunction addRelation(fromObj, name, toObj) {\n  let toPath = toObj.path();\n\n  let currentRels = fromObj.get[name] || [];\n  if (currentRels.indexOf(toPath) >= 0)\n    throw new Error(`${fromObj.path()} already ${name} ${toPath}`);\n\n  let updatedRels = currentRels.concat([toObj.path()]);\n  fromObj.update({[name]: updatedRels});\n}\n"],"sourceRoot":"../../../lib"}