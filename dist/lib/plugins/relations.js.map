{"version":3,"sources":["plugins/relations.js"],"names":[],"mappings":"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","file":"plugins/relations.js","sourcesContent":["let _ = require('lodash');\n\nexport default function relations(rels) {\n  let plugin = new Relations(rels)\n  return (u) => (plugin.applyPlugin(u));\n}\n\nclass Relations {\n  constructor(relations) {\n    this.relations = relations;\n  }\n\n  processDefinitions(typeName, defs, prototype) {\n    let u = this.u, rels = defs.relations || {};\n\n    _.each(rels, (rel) => {\n      rel.withType = rel.withType || 'Node';\n      let aType = u.type(typeName), bType = u.type(rel.withType);\n      let aProto = prototype, bProto = bType.proto;\n\n      // add predicates\n      aProto[rel.AtoB] = makeCheckFn(rel.AtoB);\n      bProto[rel.BtoA] = makeCheckFn(rel.BtoA);\n\n      // add getters\n      if (rel.B) aProto[rel.B] = makeSingleGetter(rel.AtoB);\n      if (rel.Bs) aProto[rel.Bs] = makeMultipleGetter(rel.AtoB);\n      if (rel.A) bProto[rel.A] = makeSingleGetter(rel.BtoA);\n      if (rel.As) bProto[rel.As] = makeMultipleGetter(rel.BtoA);\n\n      // register relations for easy lookup\n      if (!aType.relations) aType.relations = {};\n      if (!bType.relations) bType.relations = {};\n\n      let aRels = aType.relations, bRels = bType.relations || {};\n      let inverseRel = {withType: typeName, AtoB: rel.BtoA, BtoA: rel.AtoB, A: rel.B, B: rel.A, As: rel.Bs, Bs: rel.As};\n      aRels[rel.AtoB] = rel; bRels[rel.BtoA] = inverseRel;\n    });\n  }\n\n  applyPlugin(u) {\n    this.u = u;\n\n    // add the core 'relate' and 'cease' commands (or methods if not in a client/server environment)\n    let fallbackMethods = {};\n    if (u.serverSide || u.clientSide) {\n      u.define({\n        commands: {\n          now: makeRelateFn(this),\n          noLonger: makeCeaseFn(this)\n        }\n      });\n    } else {\n      fallbackMethods = {\n        now: makeRelateFn(this),\n        noLonger: makeCeaseFn(this)\n      }\n    }\n\n    // apply definitions\n    u.define({relations: this.relations});\n\n    // done!\n    return {\n      nodeMethods: _.extend(fallbackMethods),\n      onDefine: this.processDefinitions.bind(this)\n    };\n  }\n}\n\nfunction makeRelateFn(relations) {\n  return function(name, otherSide) {\n    let rel = this.type().relations[name];\n    if (!rel)\n      throw new Error(`${this.type().name} objects cannot enter into relations named '${name}'.`);\n\n    let isSingularRelation = !!rel.B;\n    addRelation(this, name, otherSide, isSingularRelation);\n    let inverse = rel.BtoA, isInverseSingular = rel.A;\n    addRelation(otherSide, inverse, this, isInverseSingular);\n  };\n}\n\nfunction makeCeaseFn(relations) {\n  return function(name, otherSide) {\n    let rel = this.type().relations[name];\n    if (!rel)\n      throw new Error(`${this.type().name} objects cannot enter into relations named '${name}'.`);\n\n    removeRelation(this, name, otherSide);\n    removeRelation(otherSide, rel.BtoA, this);\n  }\n}\n\nfunction makeCheckFn(relationName) {\n  return function(otherSide) {\n    let path = otherSide.path();\n    let rels = this.get[relationName] || [];\n    return rels.indexOf(path) >= 0;\n  }\n}\n\nfunction makeSingleGetter(relationName) {\n  return function() {\n    let rels = this.get[relationName];\n    let time = this.timestamp();\n    if (rels && rels.length > 0)\n      return this.u(_.first(rels), time);\n    else\n      return undefined;\n  }\n}\n\nfunction makeMultipleGetter(relationName) {\n  return function() {\n    let rels = this.get[relationName] || [];\n    let time = this.timestamp();\n    return _.map(rels, (path) => this.u(path, time));\n  }\n}\n\nfunction addRelation(fromObj, name, toObj, removePreviousRelations = false) {\n  let u = fromObj.u, toPath = toObj.path();\n\n  let fromType = fromObj.type(), toType = toObj.type();\n  let rel = fromType.relations[name];\n  if (!rel)\n    throw new Error(`Object of type '${fromType.name}' cannot enter relations named '${name}'.`);\n  if (rel.withType != toType.name)\n    throw new Error(`${fromType.name} objects enter '${name}' relations only with ${rel.withType} objects.`);\n\n  let currentRels = fromObj.get[name] || [];\n  if (_.contains(currentRels, toPath))\n    throw new Error(`Relation '${fromObj.path()} ${name} ${toPath}' already exists.`);\n\n  if (removePreviousRelations && currentRels.length) {\n    let inverse = rel.BtoA;\n    _.each(currentRels, (path) => {\n      removeRelation(u(path), inverse, fromObj);\n    });\n    currentRels = [];\n  }\n\n  let updatedRels = currentRels.concat([toObj.path()]);\n\n  fromObj.update({[name]: updatedRels});\n  fromObj.trigger('now:' + name, {target: toObj});\n}\n\nfunction removeRelation(fromObj, name, toObj) {\n  let toPath = toObj.path();\n\n  let rels = fromObj.get[name] || [];\n  if (!_.contains(rels, toPath))\n    throw new Error(`Relation '${fromObj.path()} ${name} ${toPath}' can't be removed because it doesn't exist.`);\n\n  fromObj.update({[name]: _.without(rels, toPath)});\n  fromObj.trigger('noLonger:' + name, {target: toObj});\n}\n"],"sourceRoot":"../../../lib"}