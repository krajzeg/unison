{"version":3,"sources":["plugins/server.js"],"names":[],"mappings":"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","file":"plugins/server.js","sourcesContent":["var _ = require('lodash');\r\n\r\nimport {COMMAND, INTENT, parseMessage, BUILTIN_COMMANDS} from \"./client-server-base\";\r\n\r\nexport default function server(options) {\r\n  let serverPlugin = new ServerPlugin(options);\r\n  return function(...args) {\r\n    return serverPlugin.applyPlugin.apply(serverPlugin, args);\r\n  }\r\n}\r\n\r\nclass ServerPlugin {\r\n  constructor({communication, intents = {}, commands = {}}) {\r\n    _.extend(this, {communication, intents, commands});\r\n    _.extend(this.commands, BUILTIN_COMMANDS);\r\n\r\n    this.clients = [];\r\n\r\n    this.communication.onAttach((client) => this.attach(client));\r\n    this.communication.onDetach((client) => this.detach(client));\r\n    this.communication.onReceive((client, msg) => this.receive(client, msg));\r\n  }\r\n\r\n  applyPlugin($$) {\r\n    this.$$ = $$;\r\n    return {\r\n      nodeMethods: this.generateCommandMethods()\r\n    };\r\n  }\r\n\r\n  attach(client) {\r\n    this.clients.push(client);\r\n\r\n    let $$ = this.$$, rootState = $$('').state();\r\n    this.sendTo(client, [COMMAND, '_seed', '', [rootState]]);\r\n  }\r\n\r\n  detach(client) {\r\n    let position = this.clients.indexOf(client);\r\n    if (position >= 0)\r\n      this.clients.splice(position, 1);\r\n  }\r\n\r\n  receive(client, msgString) {\r\n    parseMessage(msgString, (message) => {\r\n      let [messageType] = message;\r\n      switch (messageType) {\r\n        case INTENT:\r\n          return this.applyIntent(client, message);\r\n        case COMMAND:\r\n          throw new Error(\"Servers do not obey commands.\")\r\n      }\r\n    });\r\n  }\r\n\r\n  sendToAll(message) {\r\n    let msgString = JSON.stringify(message);\r\n    _.each(this.clients, (client) => {\r\n      this.communication.sendTo(client, msgString);\r\n    });\r\n  }\r\n\r\n  sendTo(client, message) {\r\n    let msgString = JSON.stringify(message);\r\n    this.communication.sendTo(client, msgString);\r\n  }\r\n\r\n  applyIntent(client, [code, intentName, objectPath, parameters]) {\r\n    let intentFn = this.intents[intentName];\r\n    let $$ = this.$$, target = $$(objectPath);\r\n\r\n    let fullParameters = parameters.concat(client);\r\n    return intentFn.apply(target, fullParameters);\r\n  }\r\n\r\n  generateCommandMethods() {\r\n    return _.object(_.map(this.commands,\r\n      (commandFn, commandName) => [commandName, this.makeCommandMethod(commandName, commandFn)]\r\n    ));\r\n  }\r\n\r\n  makeCommandMethod(commandName, commandFn) {\r\n    let server = this;\r\n    return function(...parameters) {\r\n      // 'this' refers to the Node on which the method was called here\r\n      commandFn.apply(this, parameters); // apply the changes on the server\r\n      server.sendToAll([COMMAND, commandName, this.path(), parameters]); // send the changes to all the clients\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\lib"}