{"version":3,"sources":["plugins/server.js"],"names":[],"mappings":"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","file":"plugins/server.js","sourcesContent":["var _ = require('lodash');\nvar Promise = require('bluebird');\n\nimport {COMMAND, INTENT, RESPONSE, RESPONSE_OK, RESPONSE_ERROR, parseMessage, BUILTIN_COMMANDS, deserializeArguments, serializeArguments, serialize} from \"./client-server-base\";\n\nexport default function server(options) {\n  let serverPlugin = new ServerPlugin(options);\n  let fn = function(...args) {\n    return serverPlugin.applyPlugin.apply(serverPlugin, args);\n  };\n  fn.plugin = serverPlugin;\n\n  return fn;\n}\n\nclass ServerPlugin {\n  constructor({\n    communication,\n    intents = {}, commands = {},\n    errorHandler = defaultErrorHandler,\n    unexpectedErrorMessage = 'Oops! Something went very wrong on the server.'})\n  {\n    _.extend(this, {communication, intents, commands});\n    _.extend(this.commands, BUILTIN_COMMANDS);\n    this.config = {\n      errorHandler: errorHandler,\n      unexpectedErrorMessage: unexpectedErrorMessage\n    };\n\n    this.clients = [];\n\n    this.communication.onAttach((client) => this.attach(client));\n    this.communication.onDetach((client) => this.detach(client));\n    this.communication.onReceive((client, msg) => this.receive(client, msg));\n  }\n\n  applyPlugin(u) {\n    this.u = u;\n    this.addNodeMethods();\n\n    return {\n      methods: {\n        addIntent: this.addIntent.bind(this),\n        addCommand: this.addCommand.bind(this)\n      }\n    };\n  }\n\n  attach(client) {\n    this.clients.push(client);\n\n    let u = this.u, rootState = u('').state();\n    this.sendTo(client, [COMMAND, '_seed', '', [rootState]]);\n  }\n\n  detach(client) {\n    let position = this.clients.indexOf(client);\n    if (position >= 0)\n      this.clients.splice(position, 1);\n  }\n\n  receive(client, msgString) {\n    parseMessage(msgString, (message) => {\n      let [messageType] = message;\n      switch (messageType) {\n        case INTENT:\n          return this.applyIntent(client, message);\n        case COMMAND:\n          throw new Error(\"Servers do not obey commands from clients.\")\n      }\n    });\n  }\n\n  sendToAll(message) {\n    let msgString = JSON.stringify(message);\n    _.each(this.clients, (client) => {\n      this.communication.sendTo(client, msgString);\n    });\n  }\n\n  sendTo(client, message) {\n    let msgString = JSON.stringify(message);\n    this.communication.sendTo(client, msgString);\n  }\n\n  sendErrorResponse(client, intentId, message) {\n    this.sendTo(client, [RESPONSE, RESPONSE_ERROR, intentId, message]);\n  }\n\n  sendOkResponse(client, intentId, result) {\n    this.sendTo(client, [RESPONSE, RESPONSE_OK, intentId, serialize(result)]);\n  }\n\n  applyIntent(client, [code, intentName, objectPath, args, intentId]) {\n    let intentFn = this.intents[intentName];\n    let u = this.u, target = u(objectPath);\n\n    args = deserializeArguments(u, args);\n    let fullArgs = args.concat(client);\n\n    let runIntent = new Promise((resolve, reject) => {\n      try {\n        let result = intentFn.apply(target, fullArgs);\n        return resolve(result);\n      } catch (err) {\n        return reject(err);\n      }\n    });\n\n    return runIntent.then((result) => {\n      this.sendOkResponse(client, intentId, result);\n    }).catch((err) => {\n      if (err.reportToUser) {\n        this.sendErrorResponse(client, intentId, err.message);\n      } else {\n        this.sendErrorResponse(client, intentId, this.config.unexpectedErrorMessage);\n        this.config.errorHandler(err);\n      }\n    });\n  }\n\n  addNodeMethods() {\n    _.each(this.commands, (cmd, name) => { this.addCommand(name, cmd); });\n    _.each(this.intents, (i, name) => { this.addIntent(name, i); });\n  }\n\n  addCommand(commandName, commandCode) {\n    this.u.registerNodeProperties({\n      [commandName]: this.makeCommandMethod(commandName, commandCode)\n    });\n  }\n\n  addIntent(intentName, intentCode) {\n    this.u.registerNodeProperties({\n      [intentName]: intentCode\n    });\n  }\n\n  makeCommandMethod(commandName, commandFn) {\n    let server = this;\n    return function(...args) {\n      // 'this' refers to the Node on which the method was called here\n      commandFn.apply(this, args); // apply the changes on the server\n      server.sendToAll([COMMAND, commandName, this.path(), serializeArguments(args)]); // send the changes to all the clients\n    }\n  }\n}\n\nfunction defaultErrorHandler(err) {\n  console.error(err.stack || err);\n}"],"sourceRoot":"../../../lib"}