{"version":3,"sources":["plugins/server.js"],"names":[],"mappings":"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","file":"plugins/server.js","sourcesContent":["var _ = require('lodash');\nvar Promise = require('bluebird');\n\nlet cs = require(\"./client-server-base\");\nimport { functionized } from '../util';\n\nexport default function server(options) {\n  return functionized(ServerPlugin, [options], 'applyPlugin');\n}\n\nfunction ServerPlugin({\n  communication,\n  errorHandler = defaultErrorHandler,\n  unexpectedErrorMessage = 'Oops! Something went very wrong on the server.'\n  }) {\n\n  this.communication = communication;\n  this.config = {\n    errorHandler: errorHandler,\n    unexpectedErrorMessage: unexpectedErrorMessage\n  };\n\n  this.clientObjects = {};\n\n  this.communication.onAttach((client) => this.attach(client));\n  this.communication.onDetach((client) => this.detach(client));\n  this.communication.onReceive((client, msg) => this.receive(client, msg));\n}\nServerPlugin.prototype = {\n  applyPlugin(u) {\n    this.u = u;\n\n    // apply definitions\n    u.define({commands: cs.BUILTIN_COMMANDS}); // _seed command\n\n    return {\n      name: 'server',\n\n      onDefine: this.processDefinitions.bind(this),\n\n      methods: {\n        addIntent: this.addIntent.bind(this),\n        addCommand: this.addCommand.bind(this),\n\n        serverSide: true\n      }\n    };\n  },\n\n  attach(clientId) {\n    this.clientObjects[clientId] = {id: clientId};\n\n    let u = this.u;\n\n    let seedInformation = _.extend({}, u().state()); // independent copy to keep original state intact\n    delete seedInformation['local']; // anything under 'local' is not propagated to the clients\n\n    this.sendTo(clientId, [cs.COMMAND, '_seed', '', [seedInformation]]);\n  },\n\n  detach(clientId) {\n    delete this.clientObjects[clientId];\n  },\n\n  receive(clientId, msgString) {\n    cs.parseMessage(msgString, (message) => {\n      let [messageType] = message;\n      switch (messageType) {\n        case cs.INTENT:\n          return this.applyIntent(clientId, message);\n        case cs.COMMAND:\n          throw new Error(\"Servers do not obey commands from clients.\")\n      }\n    });\n  },\n\n  sendToAll(message) {\n    let msgString = JSON.stringify(message);\n    _.each(this.clientObjects, ({id}) => {\n      this.communication.sendTo(id, msgString);\n    });\n  },\n\n  sendTo(clientId, message) {\n    let msgString = JSON.stringify(message);\n    this.communication.sendTo(clientId, msgString);\n  },\n\n  sendErrorResponse(clientId, intentId, message) {\n    this.sendTo(clientId, [cs.RESPONSE, cs.RESPONSE_ERROR, intentId, message]);\n  },\n\n  sendOkResponse(clientId, intentId, result) {\n    this.sendTo(clientId, [cs.RESPONSE, cs.RESPONSE_OK, intentId, cs.serialize(result)]);\n  },\n\n  applyIntent(clientId, [code, intentName, objectPath, args, intentId]) {\n    let u = this.u, target = u(objectPath);\n    let intentFn = target[intentName];\n\n    args = cs.deserializeAll(u, args);\n    let fullArgs = args.concat(this.clientObjects[clientId]);\n\n    let runIntent = new Promise((resolve, reject) => {\n      try {\n        let result = intentFn.apply(target, fullArgs);\n        return resolve(result);\n      } catch (err) {\n        return reject(err);\n      }\n    });\n\n    return runIntent.then((result) => {\n      this.sendOkResponse(clientId, intentId, result);\n    }).catch((err) => {\n      if (err.reportToUser) {\n        this.sendErrorResponse(clientId, intentId, err.message);\n      } else {\n        this.sendErrorResponse(clientId, intentId, this.config.unexpectedErrorMessage);\n        this.config.errorHandler(err);\n      }\n    });\n  },\n\n  processDefinitions(typeName, definitions, prototype) {\n    // generate methods\n    let commandMethods = _.mapValues(definitions.commands || {}, (code, name) =>\n      this.makeCommandMethod(name, code)\n    );\n    let intentMethods = definitions.intents || {};\n\n    // add to the prototype of our type\n    _.extend(prototype, commandMethods, intentMethods);\n  },\n\n  addCommand(commandName, commandCode) {\n    this.u.registerNodeProperties({\n      [commandName]: this.makeCommandMethod(commandName, commandCode)\n    });\n  },\n\n  addIntent(intentName, intentCode) {\n    this.u.registerNodeProperties({\n      [intentName]: intentCode\n    });\n  },\n\n  makeCommandMethod(commandName, commandFn) {\n    let server = this;\n\n    return function(...args) {\n      // handle nested executions (command executed from another command)\n      // commands nested in other commands are not sent to clients (since they will\n      // execute them on their own when the top-level command runs)\n      let nested = !!server._runningCommand;\n      if (!nested)\n        server._runningCommand = {target: this, command: commandName, args, extras: {}};\n\n      try {\n        // execute the command, trigger events\n        this.trigger('before:' + commandName, {args: args});\n        commandFn.apply(this, args);\n        this.trigger('after:' + commandName, {args: args});\n      } catch(e) {\n        // on error, we have to reset the runningCommand\n        if (!nested)\n          server._runningCommand = null;\n        // but the error is still thrown\n        throw e;\n      }\n\n      if (!nested) {\n        // not a nested execution, so this command will be sent to the client\n        let commandForClients = [cs.COMMAND, commandName, this.path(), cs.serializeAll(args)];\n\n        // during the execution of some commands, extra information might be generated that needs to be sent to the client\n        // currently, this is used by the deterministic RNG module to make sure clients generate the same random numbers\n        // as the server\n        let extras = server._runningCommand.extras;\n        if (_.size(extras))\n          commandForClients.push(extras);\n\n        // send the command to all clients\n        server.sendToAll(commandForClients);\n\n        // we're done running\n        server._runningCommand = null;\n      }\n    }\n  },\n\n  getRunningCommand() { return this._runningCommand; },\n  getCommandExtras() {\n    if (!this._runningCommand)\n      throw new Error(\"There is no command running for extras to be attached to.\");\n    return this._runningCommand.extras;\n  }\n};\n\nfunction defaultErrorHandler(err) {\n  console.error(err.stack || err);\n}"],"sourceRoot":"../../../lib"}