{"version":3,"sources":["plugins/client-server-base.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBgB,YAAY,GAAZ,YAAY,qBAnBH,SAAS,EADlC,IAAI,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,AAGnB,IAAM,OAAO,GAAG,GAAG,EAAE,MAAM,GAAG,GAAG,CAAC,QAA5B,OAAO,GAAP,OAAO,SAAQ,MAAM,GAAN,MAAM,CAC3B,IAAM,gBAAgB,GAAG,EAC9B,KAAK,EAAA,eAAC,KAAK,EAAE;AAEX,QAAI,QAAQ,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,QANtB,QAAQ,CAMyB,CAAC,AACvC,IAAI,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,MAAM,OAP7B,QAAQ,CAO+B,CAAC,CAAC;AAG9C,QAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAGnB,KAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAC,KAAK,EAAE,EAAE,EAAK,CAC9B,MAAK,GAAG,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,CACrB,CAAC,CAAC,CACJ,EACF,CAAC,QAdW,gBAAgB,GAAhB,gBAAgB,CAgBtB,SAAS,YAAY,CAAC,SAAS,EAAE,QAAQ,EAAE;AAEhD,MAAI,OAAO,YAAA,CAAC,AACZ,IAAI,CACF,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;AAChC,QAAI,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC;AAClC,QAAI,CAAC,KAAK;AACR,UAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC,CAChD;AAAC,SAAM,CAAC,EAAE;AACT,WAAO,CAAC,KAAK,kCAA+B,SAAS,SAAK,CAAC;AAC3D,WAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACjB,WAAO,CACR;;;;AAGD,MAAI;AACF,YAAQ,CAAC,OAAO,CAAC,CAAC,CACnB;AAAC,SAAM,CAAC,EAAE;AACT,WAAO,CAAC,KAAK,kDAA+C,SAAS,SAAK,CAAC;AAC3E,WAAO,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAC7B,CACF;;;;AAED,SAAS,YAAY,CAAC,OAAO,EAAE;AAC7B,MAAI,EAAE,OAAO,YAAY,KAAK,CAAA,AAAC,EAAE,OAAO,KAAK,CAAC;AAC9C,MAAI,OAAO,CAAC,MAAM,IAAI,CAAC,EAAE,OAAO,KAAK,CAAC;;AAEzB,SAAO,SAAf,IAAI;AACT,MAAI,IAAI,IAAI,OAAO,IAAI,IAAI,IAAI,MAAM;AACnC,SAAO,KAAK,CAAC;;AAEf,SAAO,IAAI,CAAC,CACb","file":"plugins/client-server-base.js","sourcesContent":["let _ = require('lodash');\nimport { isObject } from '../util';\n\nexport const COMMAND = 'c', INTENT = 'i';\nexport const BUILTIN_COMMANDS = {\n  _seed(state) {\n    // we have to do this through .update() and .add() to trigger events properly\n    let children = _.pick(state, isObject);\n    let props = _.pick(state, _.negate(isObject));\n\n    // set all properties\n    this.update(props);\n\n    // add all children\n    _.each(children, (child, id) => {\n      this.add(id, child);\n    });\n  }\n};\n\nexport function parseMessage(msgString, callback) {\n  // parse the message\n  let message;\n  try {\n    message = JSON.parse(msgString);\n    let valid = messageValid(message);\n    if (!valid)\n      throw new Error('Incorrect message format.');\n  } catch(e) {\n    console.error(`Received garbage message: '${msgString}'.`);\n    console.error(e);\n    return;\n  }\n\n  // try to act upon it\n  try {\n    callback(message);\n  } catch(e) {\n    console.error(`Problem encountered when handling message '${msgString}':`);\n    console.error(e.stack || e);\n  }\n}\n\nfunction messageValid(message) {\n  if (!(message instanceof Array)) return false;\n  if (message.length != 4) return false;\n\n  let [code] = message;\n  if (code != COMMAND && code != INTENT)\n    return false;\n\n  return true;\n}\n"],"sourceRoot":"../../../lib"}