{"version":3,"sources":["util.js"],"names":[],"mappings":"mFAAgB,WAAW,GAAX,WAAW;;;;;;;;;;;;;;;;;;AAkBX,QAAQ,GAAR,QAAQ,CAlBjB,SAAS,WAAW,CAAC,MAAM,EAAE,aAAa,EAAE,OAAO,EAAE;AAE1D,MAAI,EAAE,GAAG,SAAL,EAAE,GAAqB,mCAAN,IAAI,gDAAJ,IAAI,0BACvB,OAAO,MAAM,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAClD,CAAC;AAEF,SAAO,CAAC,GAAG,CAAC,UAAC,UAAU,EAAK,CAC1B,EAAE,CAAC,UAAU,CAAC,GAAG,gDAAI,IAAI,qDAAJ,IAAI,mCAAK,MAAM,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,EAAA,CAAC,CACtE,CAAC,CAAC;AAGH,IAAE,CAAC,IAAI,GAAG,MAAM,CAAC,AACjB,MAAM,CAAC,EAAE,GAAG,EAAE,CAAC;AAGf,SAAO,EAAE,CAAC,CACX,AAEM,SAAS,QAAQ,CAAC,KAAK,EAAE,CAC9B,OAAO,AAAC,OAAO,KAAK,IAAI,QAAQ,IAAM,EAAE,KAAK,YAAY,KAAK,CAAA,AAAC,AAAC,CAAC,CAClE","file":"util.js","sourcesContent":["export function functionize(object, defaultMethod, methods) {\n  // turn the object into a function that calls a chosen method by default\n  var fn = function(...args) {\n    return object[defaultMethod].apply(object, args);\n  };\n  // expose other methods on the function object\n  methods.map((methodName) => {\n    fn[methodName] = (...args) => object[methodName].apply(object, args);\n  });\n\n  // make sure we can reach both the base from the function and vice-versa\n  fn.base = object;\n  object.fn = fn;\n\n  // return!\n  return fn;\n}\n\nexport function isObject(thing) {\n  return (typeof thing == 'object') && (!(thing instanceof Array));\n}"],"sourceRoot":"../../lib"}